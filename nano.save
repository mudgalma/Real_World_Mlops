# scripts/drift_check.py
import json, sys, os
CURRENT = "reports/data_metrics.json"
BASELINE = "reports/prev_data_metrics.json"
DRIFT_THRESHOLD_REL = 0.2   # 20% relative change triggers drift

if not os.path.exists(CURRENT):
    print("Missing current metrics:", CURRENT); sys.exit(2)

cur = json.load(open(CURRENT))
if not os.path.exists(BASELINE):
    # first run: store baseline copy for future comparisons
    json.dump(cur, open(BASELINE, "w"), indent=2)
    print("Saved baseline metrics (first run).")
    sys.exit(0)

base = json.load(open(BASELINE))
# compare numeric summaries
for feat, cur_stats in cur.get("summary", {}).items():
    base_stats = base.get("summary", {}).get(feat)
    if not base_stats:
        print(f"New feature detected: {feat} (no baseline) -> treat as drift")
        sys.exit(1)
    # mean relative change
    base_mean = base_stats.get("mean") or 0.0
    cur_mean = cur_stats.get("mean") or 0.0
    if base_mean == 0:
        continue
    rel_change = abs(cur_mean - base_mean) / abs(base_mean)
    if rel_change > DRIFT_THRESHOLD_REL:
        print(f"DRIFT detected on {feat}: base_mean={base_mean} cur_mean={cur_mean} rel_change={rel_change:.2f}")
        sys.exit(1)

print("No significant drift detected.")
sys.exit(0)
